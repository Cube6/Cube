---
apiVersion: apps/v1
kind: Deployment # Deployment为多个Pod副本
metadata:
  name: cubeboardservice-deployment
  labels:
    app: cubeboardservice-deployment
spec:
  replicas: 2 # 实例数量
  selector:
    matchLabels: # 定义该部署匹配哪些Pod
      app: cubeboardservice
  minReadySeconds: 3 # 可选，指定Pod可以变成可用状态的最小秒数，默认是0
  strategy:
    type: RollingUpdate # 部署策略类型，使用RollingUpdate可以保证部署期间服务不间断
    rollingUpdate:
      maxUnavailable: 1 # 部署时最大允许停止的Pod数量
      maxSurge: 1 # 部署时最大允许创建的Pod数量
  template: # 用来指定Pod的模板，与Pod的定义类似
    metadata:
      labels: # Pod标签，与上面matchLabels对应
        app: cubeboardservice
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: cubeboardservice
          image: docker.io/yuanzhitang/cubeboardservice
          imagePullPolicy: Always # Always每次拉去新镜像
          ports:
            - containerPort: 5000
          env:
            - name: ASPNETCORE_URLS
              value: https://+:5000
            - name: ConnectionStrings__DefaultConnection
              value: Server=tcp:10.10.39.138,1433;Initial Catalog=cube_board;User ID=sa;Password=Welcome1*;
            - name: ConnectionStrings__RedisConnection
              value: 10.10.176.150:6379
            - name: RabbitMq__ConnectionString
              value: amqp://admin:Welcome1@10.63.223.58:5672
            - name: RabbitMq__QueueName
              value: CubeEvent
            - name: ASPNETCORE_Kestrel__Certificates__Default__Password
              value: Welcome1
            - name: ASPNETCORE_Kestrel__Certificates__Default__Path
              value: ./aspnetapp.pfx
---
apiVersion: v1
kind: Service
metadata:
  name: cubeboardservice-service
  labels:  
    name: cubeboardservice-service
spec:
  selector:
    app: cubeboardservice #与template-labels参数pod标签一致
  ports:
    - protocol: TCP
      port: 5000 #clusterIP开放的端口
      targetPort: 5000 #container开放的端口，与containerPort一致
      nodePort: 30500 # 所有的节点都会开放此端口，此端口供外部调用。
  type: NodePort